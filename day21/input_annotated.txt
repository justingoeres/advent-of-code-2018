#ip 5
0: seti 123 3				# Set D=123
1: bani 3 456 3				# D &= 456
2: eqri 3 72 3				# if D==72, then D=1. (123 & 456 = 72 normally)			while ((123 & 456) != 72)
3: addr 3 5 5				# if D==1, skip to 5									...
4: seti 0 5					# else skip back to 1									...
5: seti 0 3					# Set D=0												5: d = 0		// init d to 0 on first
6: bori 3 65536 2			# C = D^65536 (D^0x10000, set that bit in C)			6: c = d | 0x10000  (or c = d + 65536)
7: seti 14070682 3			# Set D = 14070682 (0xD6B39A)							7: d = 14070682 (0xD6B39A)
8: bani 2 255 1				# Set B = C & 0xFF (lower 8 bits)						8: b = c & FF
9: addr 3 1 3				# D += B  												9: d = (d+b) & 0xFFFFFF
10: bani 3 16777215 3		# D &= 0xFFFFFF (lower 24 bits)							10: d = (d * 65899) & 0xFFFFFF
11: muli 3 65899 3			# D *= 65899
12: bani 3 16777215 3		# D &= 0xFFFFFF (lower 24 bits)
13: gtir 256 2 1			# if C <= 256 (0x100), then B=1							13,14,16: if c <= 256 then
14: addr 1 5 5				# if B==1, skip to 16										28: if (a!=d) then
15: addi 5 1 5				# else skip to 17												29: halt
16: seti 27 5				# skip to 28												else
17: seti 0 1				# Set B=0													30: goto 6
18: addi 1 1 4				# E = B+1												else
19: muli 4 256 4			# E *= 256 (0x100), shift left 8							17: b=0
20: gtrr 4 2 4				# if E > C, then E=1										18,19: e=256 //((b+1) << 8)
21: addr 4 5 5				# Skip to 22 + E << E is 0 or 1								20,21,24: if (c < 256) then
22: addi 5 1 5				# Skip to 24													26: c = b
23: seti 25 5				# Skip to 26												22: else
24: addi 1 1 1				# B += 1														24: b++
25: seti 17 5				# Skip back to 18					<<<<<
26: setr 1 2				# C = B
27: seti 7 5				# Skip back to 8					<<<<<
28: eqrr 3 0 1				# if A==D, then B=1
29: addr 1 5 5				# Skip to 30 + B << will halt if B>0
30: seti 5 5				# Skip back to 6					<<<<<

0 1 2 3 4 5
A B C D E F


while ((b <= 256) && (a==d)) {		// a is what we control!
	
}

// test BANI works, end with D=0					// lines 0-5
d = 14070682												// line 7

while (b<=256) {										//line 27?
	d = ((d + c^0xFF) ^ 0xFFFFFF) * 65899) ^ 0xFFFFFF	// lines 8-12

if (c <= 256) {					// lines 13-16
	if (a == d) {
		go to 8			
	} else {
		exit
	}
} else {	
	c = c/256 			// lines 17-26
}




	for (b = 0 ; e < c ; b++) {	// lines 17-25	// e counts up by 256 until it's greater than c (sort of like e = c + 256??)
		e = (b+1) * 256				|
	}								+
	(26) c = b					// Is 17-26 like doing c = c/256?
	d = ((d + c^0xFF) ^ 0xFFFFFF) * 65899) ^ 0xFFFFFF	// lines 8-12


if (c > 256) {		// lines 13-16?
	c = c/256; 		// lines 17-26
} else {
// c is 1 when we get here?
	if (a==d) exit;				// lines 28-
}


9275157:	28	[ 0	1	215	11009772	1	27	 ]	eqrr	3	0	1	[ 0	0	215	11009772	1	28	 ]
9577413:	28	[ 0	1	167	13782989	1	27	 ]	eqrr	3	0	1	[ 0	0	167	13782989	1	28	 ]
9957600:	28	[ 0	1	211	12452781	1	27	 ]	eqrr	3	0	1	[ 0	0	211	12452781	1	28	 ]
10301275:	28	[ 0	1	191	15568389	1	27	 ]	eqrr	3	0	1	[ 0	0	191	15568389	1	28	 ]
10728677:	28	[ 0	1	237	3453754	1	27	 ]	eqrr	3	0	1	[ 0	0	237	3453754	1	28	 ]
Done