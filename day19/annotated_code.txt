0: addi 5 16 5	# JMP to 17 (setup)			
1: seti 1 2		# Set C to 1					C = 1
2: seti 1 4		# Set E to 1					E = 1
3: mulr 2 4 3	# D = C * E
4: eqrr 3 1 3	# if D==B, then D=1.			if C * E == B
5: addr 3 5 5	# if D==1, skip to 7.				then A += C
6: addi 5 1 5	# else skip to 8.				
7: addr 2 0 0	# A += C
8: addi 4 1 4	# E += 1						E += 1
9: gtrr 4 1 3	# if E > B, then D=1			if E > B
10: addr 5 3 5	# if D==1, skip to 12				then C += 1
													if C > B
														then break;
													else JMP to 2
11: seti 2 5	# else JMP back to 3.			else JMP to 3
12: addi 2 1 2	# C += 1
13: gtrr 2 1 3	# if C > B, then D=1
14: addr 3 5 5	# if D==1, skip to 16 (terminate)
15: seti 1 5	# else JMP back to 2
16: mulr 5 5 5	# terminate
17: addi 1 2 1	# setup here
18: mulr 1 1 1
19: mulr 5 1 1
20: muli 1 11 1
21: addi 3 6 3
22: mulr 3 5 3
23: addi 3 15 3
24: addr 1 3 1
25: addr 5 0 5
26: seti 0 5
27: setr 5 3
28: mulr 3 5 3
29: addr 5 3 3
30: mulr 5 3 3
31: muli 3 14 3
32: mulr 3 5 3
33: addr 1 3 1
34: seti 0 0
35: seti 0 5	# JMP back to 1

	0	1	2	3	4	5
	A	B	C	D	E	F